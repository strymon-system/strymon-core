var searchIndex = {};
searchIndex["strymon_communication"] = {"doc":"Communication primitives for Strymon.","items":[[3,"Network","strymon_communication","Handle to the networking subsystem.",null,null],[11,"new","","Creates a new default network handle.",0,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[11,"hostname","","Returns the configured externally reachable hostname of the current process.",0,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[0,"transport","","Asynchronous point-to-point message channels.",null,null],[3,"Sender","strymon_communication::transport","A queue handle to send messages on the channel.",null,null],[3,"Receiver","","A queue handle for receiving messages on the channel.",null,null],[3,"Listener","","A queue handle accepting incoming connections.",null,null],[11,"connect","strymon_communication","Connects to a socket returns two queue handles.",0,{"inputs":[{"name":"self"},{"name":"e"}],"output":{"name":"result"}}],[11,"listen","","Opens a new socket and returns a handle to receive incomming clients.",0,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"generics":["listener"],"name":"result"}}],[11,"clone","strymon_communication::transport","",1,{"inputs":[{"name":"self"}],"output":{"name":"sender"}}],[11,"send","","Enqueues an outgoing message.",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"drop","","",1,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["option","error"],"name":"poll"}}],[11,"external_addr","","Returns the address of the socket in the form of `(hostname, port)`.",3,null],[11,"poll","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["option","error"],"name":"poll"}}],[0,"message","strymon_communication","Reference-counted buffer for multi-part messages.",null,null],[3,"MessageBuf","strymon_communication::message","A `MessageBuf` represents a contiguous buffer of MessagePack encoded objects. It can be used as a multi-part message to allow partial deserialization. Partial messages can be inserted using the `push` method and are read in first-in, first-out order by the `pop` method.",null,null],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"messagebuf"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"messagebuf"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"messagebuf"}],"output":{"name":"bool"}}],[11,"new","","Create a new message buffer containing the serialized object.",4,{"inputs":[{"name":"s"}],"output":{"name":"result"}}],[11,"empty","","Create a new, empty message.",4,{"inputs":[],"output":{"name":"self"}}],[11,"is_empty","","Returns true if the contained bytes have a length of zero.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"push","","Serialize and append an item to the message buffer.",4,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"pop","","Remove and deserialize the top item in the message buffer.",4,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"peek","","Peek at the top item in the message buffer. This borrows the buffer for zero-copy deserialization.",4,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"write","","Copies the contained bytes into the provided writer.",4,{"inputs":[{"name":"self"},{"name":"w"}],"output":{"name":"result"}}],[11,"read","","Reads a message from a reader, expecting a frame length prefix.",4,{"inputs":[{"name":"r"}],"output":{"generics":["option"],"name":"result"}}],[11,"from","","",4,{"inputs":[{"name":"bytesmut"}],"output":{"name":"self"}}],[11,"into","","",4,{"inputs":[{"name":"self"}],"output":{"name":"bytesmut"}}],[0,"rpc","strymon_communication","Asynchronous remote procedure calls.",null,null],[3,"RequestBuf","strymon_communication::rpc","Receiver-side buffer containing an incoming request.",null,null],[3,"Responder","","Receiver-side handle for responding to a given request.",null,null],[3,"Response","","Sender-side future eventually yielding the response for a request.",null,null],[3,"Outgoing","","Sender-side queue for sending out requests.",null,null],[3,"Incoming","","Receiver-side queue of incoming requests.",null,null],[3,"Server","","Handle for queue of newly connected peers.",null,null],[8,"Name","","A trait to distinguish remote procedure calls.",null,null],[16,"Discriminant","","The discriminant type representing `Self`.",5,null],[10,"discriminant","","Convert `Self` into a discriminant.",5,null],[10,"from_discriminant","","Restore `Self` from a discriminant. Returns `None` if `Self` cannot be restored.",5,null],[8,"Request","","A trait for defining the signature of a remote procedure.",null,null],[16,"Success","","The type of a successful response.",6,null],[16,"Error","","The type of a failed response.",6,null],[18,"NAME","","A unique value identifying this type of request.",6,null],[11,"name","","Extracting the `Request::NAME` to identfy the request type.",7,{"inputs":[{"name":"self"}],"output":{"name":"n"}}],[11,"decode","","Decodes the request into the request data and a responder handle.",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"respond","","Sends back the response to the client which submitted the request.",8,{"inputs":[{"name":"self"},{"name":"result"}],"output":null}],[11,"wait_unwrap","","Convenience-wrapper which performs a blocking wait on the response.",9,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"poll","","",9,{"inputs":[{"name":"self"}],"output":{"generics":["async"],"name":"result"}}],[11,"drop","","",9,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"outgoing"}}],[11,"request","","Asynchronously sends out a request to the remote peer.",10,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"response"}}],[11,"poll","","",11,{"inputs":[{"name":"self"}],"output":{"generics":["option","error"],"name":"poll"}}],[11,"external_addr","","Returns the address of the socket in the form of `(hostname, port)`.",12,null],[11,"poll","","",12,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"client","strymon_communication","Connects to an remote procedure call server.",0,{"inputs":[{"name":"self"},{"name":"e"}],"output":{"name":"result"}}],[11,"server","","Creates a new remote procedure call server.",0,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"generics":["server"],"name":"result"}}],[0,"fetch","","Utilities for sending files over the network.",null,null],[3,"Handle","strymon_communication::fetch","Handle for the file server. Closes the server when dropped.",null,null],[11,"url","","Returns a URL in the format of `tcp://host:port` for the given upload.",13,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"drop","","",13,{"inputs":[{"name":"self"}],"output":null}],[11,"upload","strymon_communication","Serves the specified file on a ephemerial network port.",0,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"generics":["handle"],"name":"result"}}],[11,"download","","Downloads the file served at `url` and downloads it into `path`.",0,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"network"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Network"],[3,"Sender"],[3,"Receiver"],[3,"Listener"],[3,"MessageBuf"],[8,"Name"],[8,"Request"],[3,"RequestBuf"],[3,"Responder"],[3,"Response"],[3,"Outgoing"],[3,"Incoming"],[3,"Server"],[3,"Handle"]]};
searchIndex["strymon_coordinator"] = {"doc":"Internal APIs of the Strymon coordinator.","items":[[3,"Builder","strymon_coordinator","Creates a new coordinator instance.",null,null],[0,"handler","","The coordinator request handler.",null,null],[3,"Coordinator","strymon_coordinator::handler","The coordinator instance, contains the current system state and handles incoming requests.",null,null],[3,"CoordinatorRef","","A cloneable reference to the coordinator instance, tracking any state created by this handle.",null,null],[11,"new","","Creates a new coordinator instance, returning a cloneable client handle for it.",0,{"inputs":[{"name":"catalog"},{"name":"handle"}],"output":{"name":"coordinatorref"}}],[11,"submission","","Handles a new job submission request.",1,{"inputs":[{"name":"self"},{"name":"submission"}],"output":{"generics":["future"],"name":"box"}}],[11,"termination","","Handles a new job termination request.",1,{"inputs":[{"name":"self"},{"name":"termination"}],"output":{"generics":["future"],"name":"box"}}],[11,"add_executor","","Registers a new executor instance. Returns the newly assigned identifier for this executor.",1,{"inputs":[{"name":"self"},{"name":"addexecutor"},{"name":"outgoing"}],"output":{"name":"executorid"}}],[11,"add_worker_group","","Marks job worker group (e.g. a process hosting some worker threads) as ready.",1,{"inputs":[{"name":"self"},{"name":"jobid"},{"name":"usize"}],"output":{"generics":["future"],"name":"box"}}],[11,"publish","","Creates a new publication in the catalog. Returns the created topic.",1,{"inputs":[{"name":"self"},{"name":"publish"}],"output":{"generics":["topic","publisherror"],"name":"result"}}],[11,"unpublish","","Removes a publication from the catalog.",1,{"inputs":[{"name":"self"},{"name":"jobtoken"},{"name":"topicid"}],"output":{"generics":["unpublisherror"],"name":"result"}}],[11,"subscribe","","Handles a new subscription request.",1,{"inputs":[{"name":"self"},{"name":"subscribe"}],"output":{"generics":["future"],"name":"box"}}],[11,"unsubscribe","","Removes a subscription from the catalog.",1,{"inputs":[{"name":"self"},{"name":"jobtoken"},{"name":"topicid"}],"output":{"generics":["unsubscribeerror"],"name":"result"}}],[11,"lookup","","Performs a non-blocking, non-subscribing topic lookup.",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["topic"],"name":"result"}}],[11,"catalog_request","","Forwards an encoded query to the catalog.",1,{"inputs":[{"name":"self"},{"generics":["catalogrpc"],"name":"requestbuf"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"drop","","",1,{"inputs":[{"name":"self"}],"output":null}],[0,"catalog","strymon_coordinator","The catalog contains meta-data about the current state of the system.",null,null],[3,"Catalog","strymon_coordinator::catalog","A representation of the current catalog state.",null,null],[3,"Executors","","An iterator over all the executors of the catalog.",null,null],[3,"Service","","The service for the catalog.",null,null],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"catalog"}}],[11,"default","","",2,{"inputs":[],"output":{"name":"catalog"}}],[11,"new","","Creates a new catalog instance, containing a self-referring topic.",2,null],[11,"add_executor","","Inserts a new available executor into the catalog.",2,{"inputs":[{"name":"self"},{"name":"executor"}],"output":null}],[11,"remove_executor","","Removes an existing executor from the catalog.",2,{"inputs":[{"name":"self"},{"name":"executorid"}],"output":null}],[11,"executors","","Returns an iterator over all existing executors.",2,{"inputs":[{"name":"self"}],"output":{"name":"executors"}}],[11,"add_job","","Adds a new completely spawned job.",2,{"inputs":[{"name":"self"},{"name":"job"}],"output":null}],[11,"remove_job","","Removes a job from the catalog.",2,{"inputs":[{"name":"self"},{"name":"jobid"}],"output":null}],[11,"publish","","Creates and announces a new topic.",2,null],[11,"unpublish","","Removes a publication from the catalog.",2,{"inputs":[{"name":"self"},{"name":"jobid"},{"name":"topicid"}],"output":{"generics":["unpublisherror"],"name":"result"}}],[11,"lookup","","Finds a topic by name.",2,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["topic"],"name":"option"}}],[11,"subscribe","","Adds a new subscription to the catalog.",2,{"inputs":[{"name":"self"},{"name":"jobid"},{"name":"topicid"}],"output":null}],[11,"unsubscribe","","Removes a subscription from the catalog.",2,{"inputs":[{"name":"self"},{"name":"jobid"},{"name":"topicid"}],"output":{"generics":["unsubscribeerror"],"name":"result"}}],[11,"request","","Decodes and responds to an incoming catalog service request.",2,{"inputs":[{"name":"self"},{"generics":["catalogrpc"],"name":"requestbuf"}],"output":{"name":"result"}}],[11,"next","","",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"new","","Creates a new service, returning the address of its endpoint.",4,{"inputs":[{"name":"network"},{"name":"handle"}],"output":{"name":"result"}}],[11,"poll","","",4,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[0,"dispatch","strymon_coordinator","Client dispatch and request completion logic.",null,null],[3,"Dispatch","strymon_coordinator::dispatch","The dispatcher assigned to each incoming connection.",null,null],[11,"new","","Creates a new dispatcher instance.",5,{"inputs":[{"name":"coordinatorref"},{"name":"handle"},{"name":"outgoing"}],"output":{"name":"self"}}],[11,"client","","Decodes and dispatches each incoming request.",5,{"inputs":[{"name":"self"},{"generics":["coordinatorrpc"],"name":"incoming"}],"output":{"generics":["error"],"name":"result"}}],[11,"hostname","strymon_coordinator","Sets the externally reachable hostname of this machine (default: inferred).",6,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"self"}}],[11,"port","","Sets the port on which the coordinator service is exposed (default: `9189`).",6,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"self"}}],[11,"default","","",6,{"inputs":[],"output":{"name":"self"}}],[11,"run","","Starts and runs a new coordinator instance.",6,{"inputs":[{"name":"self"}],"output":{"name":"result"}}]],"paths":[[3,"Coordinator"],[3,"CoordinatorRef"],[3,"Catalog"],[3,"Executors"],[3,"Service"],[3,"Dispatch"],[3,"Builder"]]};
searchIndex["strymon_executor"] = {"doc":"The default implementation of the Strymon job executor.","items":[[3,"ExecutorService","strymon_executor","A running Strymon executor instance.",null,null],[3,"Builder","","A builder type to initialize and run a new executor instance.",null,null],[0,"executable","","Job supervision logic for native executables.",null,null],[3,"Builder","strymon_executor::executable","A builder for configuring a new job process.",null,null],[3,"ProcessService","","Strymon job process spawning and supervision service.",null,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new builder for the given native executable file.",0,{"inputs":[{"name":"t"},{"name":"i"}],"output":{"generics":["spawnerror"],"name":"result"}}],[11,"threads","","Sets the number of Timely threads per worker (default: `1`)",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"process","","Sets the current Timely process id (default: `0`)",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"hostlist","","Specify the host names of all Timely processes (default: `[]`)",0,{"inputs":[{"name":"self"},{"generics":["string"],"name":"vec"}],"output":{"name":"self"}}],[11,"working_directory","","Sets the working directory of the child process (default: `std::env::current_dir()`)",0,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"self"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new service instance.",1,{"inputs":[{"name":"handle"},{"name":"string"},{"name":"string"}],"output":{"name":"self"}}],[11,"spawn","","Spawns a new process to be supervised by this process service.",1,{"inputs":[{"name":"self"},{"name":"jobid"},{"name":"builder"}],"output":{"generics":["spawnerror"],"name":"result"}}],[11,"terminate","","Tries to terminate the process assigned to a given job identifier.",1,{"inputs":[{"name":"self"},{"name":"jobid"}],"output":{"generics":["terminateerror"],"name":"result"}}],[11,"new","strymon_executor","Creates a new instance for an newly registered executor.",2,{"inputs":[{"name":"executorid"},{"name":"string"},{"name":"pathbuf"},{"name":"network"},{"name":"handle"}],"output":{"name":"self"}}],[11,"dispatch","","Decode and handle a request sent by the coordinator.",2,{"inputs":[{"name":"self"},{"generics":["executorrpc"],"name":"requestbuf"}],"output":{"generics":["error"],"name":"result"}}],[11,"hostname","","Sets the externally reachable hostname of this machine (default: inferred).",3,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"self"}}],[11,"coordinator","","Sets the address of the coordinator (default: `\"localhost:9189\"`)",3,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"self"}}],[11,"ports","","Sets a range of ports to be allocated to `timely_communication` workers (default: `2101-4101`)",3,{"inputs":[{"name":"self"},{"name":"u16"},{"name":"u16"}],"output":{"name":"self"}}],[11,"workdir","","Sets the base path for job working directories (default: `\"jobs\"`).",3,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"self"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"self"}}],[11,"start","","Starts a new executor instance and blocks until termination.",3,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"result"}}]],"paths":[[3,"Builder"],[3,"ProcessService"],[3,"ExecutorService"],[3,"Builder"]]};
searchIndex["strymon_job"] = {"doc":"The Strymon client-library. In order to register a Timely Dataflow job with Strymon, users are expected to link against this library and eventually invoke `strymon_job::execute`.","items":[[3,"Coordinator","strymon_job","Handle to communicate with the Strymon coordinator.",null,null],[5,"execute","","Executes a Timely dataflow within this Strymon job.",null,{"inputs":[{"name":"f"}],"output":{"generics":["workerguards","string"],"name":"result"}}],[0,"operators","","Types used by Strymon-specific operators such as `publish` and `subscribe`.",null,null],[0,"publish","strymon_job::operators","Types used for managing publications.",null,null],[4,"PublicationError","strymon_job::operators::publish","Failure states of a publication.",null,null],[13,"TopicAlreadyExists","","A topic with the same name already exists.",0,null],[13,"TopicNotFound","","Tried to unpublish a non-existing topic.",0,null],[13,"AuthenticationFailure","","Tried to unpublish a topic not owned by the current job.",0,null],[13,"IoError","","Networking error occured.",0,null],[4,"Partition","","Marker to specify topic partitioning.",null,null],[13,"PerWorker","","Publish one topic per worker.",1,null],[13,"Merge","","Merge all streams and publish a single topic.",1,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",0,{"inputs":[{"name":"publisherror"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"unpublisherror"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"result"}],"output":{"name":"self"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"partition"}}],[11,"publish","strymon_job","Publishes a local stream and creates a topic in the catalog.",2,{"inputs":[{"name":"self"},{"name":"str"},{"name":"stream"},{"name":"partition"}],"output":{"generics":["stream","publicationerror"],"name":"result"}}],[0,"subscribe","strymon_job::operators","Types for reading from topic subscriptions.",null,null],[3,"Subscription","strymon_job::operators::subscribe","A subscription handle used to receive data from a topic.",null,null],[3,"IntoIter","","A blocking iterator, yielding `io::Result<T, Vec<D>)>` tuples.",null,null],[4,"SubscriptionEvent","","Data or frontier events emitted by a subscription.",null,null],[13,"Data","","The `Data` marks the arrival of a data batch which has been published.",3,null],[13,"FrontierUpdate","","The `FrontierUpdate` event indicates that the upstream frontier has changed. The new frontier can be inspected using the `frontier()` method on the subscription handle.",3,null],[4,"SubscriptionError","","Failure states when subscribting to a topic.",null,null],[13,"TopicNotFound","","The requested topic does not exist.",4,null],[13,"TypeMismatch","","The requested topic exists, but its timestamp or data type does not match.",4,null],[13,"AuthenticationFailure","","The current job does is not authenticated to subscribe to topics.",4,null],[13,"IoError","","A networking error occured.",4,null],[11,"frontier","","The current frontier at the subscribed topics.",5,null],[11,"poll","","",5,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"frontier","","The current frontier at the subscribed topics.",6,null],[11,"into_iter","","",5,null],[11,"next","","",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"drop","","",5,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",4,{"inputs":[{"name":"subscribeerror"}],"output":{"name":"self"}}],[11,"from","","",4,{"inputs":[{"name":"unsubscribeerror"}],"output":{"name":"self"}}],[11,"from","","",4,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",4,{"inputs":[{"name":"result"}],"output":{"name":"self"}}],[11,"subscribe","strymon_job","Creates a new subscription for a single topic.",2,{"inputs":[{"name":"self"},{"name":"str"},{"name":"bool"}],"output":{"generics":["subscription","subscriptionerror"],"name":"result"}}],[11,"subscribe_group","","Create a new subscription for a partitioned topic.",2,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i"},{"name":"bool"}],"output":{"generics":["subscription","subscriptionerror"],"name":"result"}}],[0,"service","strymon_job::operators","Types used to announce and find services announced in the catalog.",null,null],[3,"Service","strymon_job::operators::service","A source of incoming requests.",null,null],[3,"Client","","Client handle for sending requests to a announced service.",null,null],[11,"drop","","",7,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",7,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"request","","Asynchronously sends out a request to the remote peer.",8,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"response"}}],[11,"drop","","",8,{"inputs":[{"name":"self"}],"output":null}],[11,"announce_service","strymon_job","Creates a new request service and announces it in the catalog.",2,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["service","publicationerror"],"name":"result"}}],[11,"bind_service","","Creates a binding to a service topic for sending requests.",2,{"inputs":[{"name":"self"},{"name":"str"},{"name":"bool"}],"output":{"generics":["client","subscriptionerror"],"name":"result"}}],[8,"RemoteTimestamp","strymon_job::operators","A trait for Timely timestamps which can be serialized using Serde.",null,null],[16,"Remote","","The `Remote` type must implement the Serde traits, it can be `Self`.",9,null],[10,"to_remote","","Convert the local timestamp into a serializeable remote type.",9,null],[10,"from_remote","","Reconstruct the Timely timestamp from a deserialized remote type.",9,null],[11,"clone","strymon_job","",2,{"inputs":[{"name":"self"}],"output":{"name":"coordinator"}}]],"paths":[[4,"PublicationError"],[4,"Partition"],[3,"Coordinator"],[4,"SubscriptionEvent"],[4,"SubscriptionError"],[3,"Subscription"],[3,"IntoIter"],[3,"Service"],[3,"Client"],[8,"RemoteTimestamp"]]};
searchIndex["strymon_model"] = {"doc":"Shared data types for Strymon Core.","items":[[3,"TopicId","strymon_model","A unique numerical identifier for a topic.",null,null],[12,"0","","",0,null],[3,"TopicType","","A representation of the type of data found in a topic.",null,null],[12,"name","","The `type_name` of the type found in this topic.",1,null],[3,"Topic","","The metadata of a published topic.",null,null],[12,"id","","A unique, non-reusable numerical identifier for this topic instance.",2,null],[12,"name","","A unique (but re-usable) name for this topic.",2,null],[12,"addr","","A `strymon_communication` endpoint address for this topic.",2,null],[12,"schema","","The kind of protocol used for this topic.",2,null],[3,"JobId","","A unique numerical identifier for a job.",null,null],[12,"0","","",3,null],[3,"Job","","The meta-data of a submitted and running job.",null,null],[12,"id","","A unique identifier for this job.",4,null],[12,"name","","A human-readable description of the job.",4,null],[12,"program","","Information about the job executable.",4,null],[12,"workers","","The total amount of workers.",4,null],[12,"executors","","A list of executors currently executing this job.",4,null],[12,"start_time","","The Unix timestamp (at the coordinator) of the submission time.",4,null],[3,"JobProgram","","The meta-data about the executable code of a job.",null,null],[12,"binary_name","","The name of the binary submitted to Strymon.",5,null],[12,"format","","The kind of the submitted executable.",5,null],[12,"source","","The URI from which the job executable can be fetched.",5,null],[12,"args","","Command-line arguments to be passed to the executable.",5,null],[3,"ExecutorId","","A unique numerical identifier of an executor instance.",null,null],[12,"0","","",6,null],[3,"Executor","","The meta-data of an available executor in the system.",null,null],[12,"id","","A unique identifier for this job.",7,null],[12,"host","","The hostname of the machine this executor is running on.",7,null],[12,"format","","The kind of executable format this executor suppports.",7,null],[3,"Publication","","Associates the publication of a topic by its publishing job.",null,null],[12,"0","","",8,null],[12,"1","","",8,null],[3,"Subscription","","Associates the subscription to a topic by a subscribing job.",null,null],[12,"0","","",9,null],[12,"1","","",9,null],[4,"TopicSchema","","The kind of protocol used in a topic.",null,null],[13,"Stream","","A published Timely stream of type ([`Timestamp`][ts] [`Data`][data]). [ts]: http://www.frankmcsherry.org/timely-dataflow/timely/progress/timestamp/trait.Timestamp.html [data]: http://www.frankmcsherry.org/timely-dataflow/timely/trait.Data.html",10,null],[13,"Service","","A service exporting the given `Name` interface type.",10,null],[4,"ExecutionFormat","","The format of a job executable.",null,null],[13,"NativeExecutable","","The binary uses the native executable format.",11,null],[0,"config","","Data-types used to represent the configuration of the various Strymon components.",null,null],[0,"job","strymon_model::config","Configuration data passed down to job processes.",null,null],[3,"Process","strymon_model::config::job","The configuration of a job processes.",null,null],[12,"job_id","","Job this process belongs to",12,null],[12,"index","","Index of this process (worker group)",12,null],[12,"addrs","","Addresses of all worker groups of this same job",12,null],[12,"threads","","Number of thread this process hosts",12,null],[12,"coord","","Address of the Strymon coordinator",12,null],[12,"hostname","","Externally reachable hostname",12,null],[4,"EnvError","","Error which occurs when the job process configuration cannot be parsed from the local environment.",null,null],[13,"VarErr","","The configuration data could not be parsed because of a missing environment variable.",13,null],[13,"IntErr","","The configuration data contained invalid numbers.",13,null],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"process"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"process"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"self"},{"name":"process"}],"output":{"name":"bool"}}],[11,"from_env","","Decodes the process configuration from the environment, i.e. using `std::env::var`.",12,{"inputs":[],"output":{"generics":["enverror"],"name":"result"}}],[11,"into_env","","Encodes the process configuration into key-value pairs.",12,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",13,{"inputs":[{"name":"varerror"}],"output":{"name":"self"}}],[11,"from","","",13,{"inputs":[{"name":"parseinterror"}],"output":{"name":"self"}}],[11,"clone","strymon_model","",0,{"inputs":[{"name":"self"}],"output":{"name":"topicid"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"topicid"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"topicid"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"topicid"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"self"},{"name":"topicid"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"self"},{"name":"topicid"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"self"},{"name":"topicid"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"self"},{"name":"topicid"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"topicid"}],"output":{"name":"ordering"}}],[11,"hash","","",0,null],[11,"entomb","","",0,{"inputs":[{"name":"self"},{"name":"w"}],"output":{"name":"result"}}],[11,"extent","","",0,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"exhume","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",0,{"inputs":[{"name":"u64"}],"output":{"name":"topicid"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"topictype"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"topictype"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"topictype"}],"output":{"name":"bool"}}],[11,"hash","","",1,null],[11,"entomb","","",1,{"inputs":[{"name":"self"},{"name":"w"}],"output":{"name":"result"}}],[11,"extent","","",1,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"exhume","","",1,null],[11,"fmt","","",1,{"inputs":[{"name":"formatter"}],"output":{"name":"result"}}],[11,"of","","Creates a new instance for a given type.",1,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"topicschema"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"topicschema"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"self"},{"name":"topicschema"}],"output":{"name":"bool"}}],[11,"hash","","",10,null],[11,"entomb","","",10,{"inputs":[{"name":"self"},{"name":"w"}],"output":{"name":"result"}}],[11,"extent","","",10,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"exhume","","",10,null],[11,"fmt","","",10,{"inputs":[{"name":"formatter"}],"output":{"name":"result"}}],[11,"is_stream","","Returns `true` for any `Stream` topic.",10,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_service","","Returns `true` for any `Service` topic.",10,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"topic"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"topic"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"topic"}],"output":{"name":"bool"}}],[11,"entomb","","",2,{"inputs":[{"name":"self"},{"name":"w"}],"output":{"name":"result"}}],[11,"extent","","",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"exhume","","",2,null],[11,"fmt","","",2,{"inputs":[{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"jobid"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"jobid"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"jobid"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"self"},{"name":"jobid"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",3,{"inputs":[{"name":"self"},{"name":"jobid"}],"output":{"name":"bool"}}],[11,"le","","",3,{"inputs":[{"name":"self"},{"name":"jobid"}],"output":{"name":"bool"}}],[11,"gt","","",3,{"inputs":[{"name":"self"},{"name":"jobid"}],"output":{"name":"bool"}}],[11,"ge","","",3,{"inputs":[{"name":"self"},{"name":"jobid"}],"output":{"name":"bool"}}],[11,"cmp","","",3,{"inputs":[{"name":"self"},{"name":"jobid"}],"output":{"name":"ordering"}}],[11,"hash","","",3,null],[11,"entomb","","",3,{"inputs":[{"name":"self"},{"name":"w"}],"output":{"name":"result"}}],[11,"extent","","",3,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"exhume","","",3,null],[11,"fmt","","",3,{"inputs":[{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",3,{"inputs":[{"name":"u64"}],"output":{"name":"jobid"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"job"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"job"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"job"}],"output":{"name":"bool"}}],[11,"entomb","","",4,{"inputs":[{"name":"self"},{"name":"w"}],"output":{"name":"result"}}],[11,"extent","","",4,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"exhume","","",4,null],[11,"fmt","","",4,{"inputs":[{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"jobprogram"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"jobprogram"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"jobprogram"}],"output":{"name":"bool"}}],[11,"entomb","","",5,{"inputs":[{"name":"self"},{"name":"w"}],"output":{"name":"result"}}],[11,"extent","","",5,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"exhume","","",5,null],[11,"fmt","","",5,{"inputs":[{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"executionformat"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"executionformat"}],"output":{"name":"bool"}}],[11,"entomb","","",11,{"inputs":[{"name":"self"},{"name":"w"}],"output":{"name":"result"}}],[11,"extent","","",11,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"exhume","","",11,null],[11,"fmt","","",11,{"inputs":[{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"executorid"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"executorid"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"executorid"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"self"},{"name":"executorid"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",6,{"inputs":[{"name":"self"},{"name":"executorid"}],"output":{"name":"bool"}}],[11,"le","","",6,{"inputs":[{"name":"self"},{"name":"executorid"}],"output":{"name":"bool"}}],[11,"gt","","",6,{"inputs":[{"name":"self"},{"name":"executorid"}],"output":{"name":"bool"}}],[11,"ge","","",6,{"inputs":[{"name":"self"},{"name":"executorid"}],"output":{"name":"bool"}}],[11,"cmp","","",6,{"inputs":[{"name":"self"},{"name":"executorid"}],"output":{"name":"ordering"}}],[11,"hash","","",6,null],[11,"entomb","","",6,{"inputs":[{"name":"self"},{"name":"w"}],"output":{"name":"result"}}],[11,"extent","","",6,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"exhume","","",6,null],[11,"fmt","","",6,{"inputs":[{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",6,{"inputs":[{"name":"u64"}],"output":{"name":"executorid"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"executor"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"executor"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"executor"}],"output":{"name":"bool"}}],[11,"entomb","","",7,{"inputs":[{"name":"self"},{"name":"w"}],"output":{"name":"result"}}],[11,"extent","","",7,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"exhume","","",7,null],[11,"fmt","","",7,{"inputs":[{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"publication"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"publication"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"self"},{"name":"publication"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",8,{"inputs":[{"name":"self"},{"name":"publication"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",8,{"inputs":[{"name":"self"},{"name":"publication"}],"output":{"name":"bool"}}],[11,"le","","",8,{"inputs":[{"name":"self"},{"name":"publication"}],"output":{"name":"bool"}}],[11,"gt","","",8,{"inputs":[{"name":"self"},{"name":"publication"}],"output":{"name":"bool"}}],[11,"ge","","",8,{"inputs":[{"name":"self"},{"name":"publication"}],"output":{"name":"bool"}}],[11,"cmp","","",8,{"inputs":[{"name":"self"},{"name":"publication"}],"output":{"name":"ordering"}}],[11,"hash","","",8,null],[11,"entomb","","",8,{"inputs":[{"name":"self"},{"name":"w"}],"output":{"name":"result"}}],[11,"extent","","",8,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"exhume","","",8,null],[11,"fmt","","",8,{"inputs":[{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"subscription"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"subscription"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"self"},{"name":"subscription"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",9,{"inputs":[{"name":"self"},{"name":"subscription"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",9,{"inputs":[{"name":"self"},{"name":"subscription"}],"output":{"name":"bool"}}],[11,"le","","",9,{"inputs":[{"name":"self"},{"name":"subscription"}],"output":{"name":"bool"}}],[11,"gt","","",9,{"inputs":[{"name":"self"},{"name":"subscription"}],"output":{"name":"bool"}}],[11,"ge","","",9,{"inputs":[{"name":"self"},{"name":"subscription"}],"output":{"name":"bool"}}],[11,"cmp","","",9,{"inputs":[{"name":"self"},{"name":"subscription"}],"output":{"name":"ordering"}}],[11,"hash","","",9,null],[11,"entomb","","",9,{"inputs":[{"name":"self"},{"name":"w"}],"output":{"name":"result"}}],[11,"extent","","",9,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"exhume","","",9,null],[11,"fmt","","",9,{"inputs":[{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"TopicId"],[3,"TopicType"],[3,"Topic"],[3,"JobId"],[3,"Job"],[3,"JobProgram"],[3,"ExecutorId"],[3,"Executor"],[3,"Publication"],[3,"Subscription"],[4,"TopicSchema"],[4,"ExecutionFormat"],[3,"Process"],[4,"EnvError"]]};
searchIndex["strymon_rpc"] = {"doc":"This crate defines the remote-procedure call protocol used between the different components in Strymon Core.","items":[[0,"coordinator","strymon_rpc","This module contains all requests (and the respones) to the the coordinator by the `strymon submit` tool, submitted and running jobs, as well as connecting executors.",null,null],[3,"Submission","strymon_rpc::coordinator","A new job submission.",null,null],[12,"job","","Specifies the job executable.",0,null],[12,"name","","An optional human-readable description.",0,null],[12,"placement","","The placement of workers in the cluster.",0,null],[3,"Termination","","A job termination request.",null,null],[12,"job","","Identifier of the job to terminate.",1,null],[3,"AddExecutor","","The message sent by new executors to register themselves at the coordinator.",null,null],[12,"host","","The hostname of the machine on which this the new executor is running.",2,null],[12,"ports","","A range of ports to be assigned for the `timely_communication` channels.",2,null],[12,"format","","The format of the executables this executor can spawn.",2,null],[3,"ExecutorError","","Error which occurs when coordinator rejects the registration of a new executor.",null,null],[3,"JobToken","","An opaque token used by job worker groups to authenticate themselves at the coordinator.",null,null],[12,"id","","The job identifier of the token owner.",3,null],[12,"auth","","A opaque random number only known to the job process and the coordinator.",3,null],[3,"AddWorkerGroup","","Registers a newly spawned worker group at the coordinator.",null,null],[12,"job","","The identifier of the job this group belongs to.",4,null],[12,"group","","The index of this group within the list of groups of the job.",4,null],[3,"Subscribe","","A topic subscription request, sent by a a spawned job the the coordinator.",null,null],[12,"name","","The name of the topic this job would like to subscribe to.",5,null],[12,"blocking","","If `blocking` is true, the response is delayed until a topic with a matching name is published. Otherwise, an error message is returned indicating that the requested topic does not exist.",5,null],[12,"token","","A token authenticating the the submitter as a successfully spawned job.",5,null],[3,"Unsubscribe","","A request to unsubscribe from a topic.",null,null],[12,"topic","","The identifier of the subscribed topic.",6,null],[12,"token","","A token authenticating the the submitter as a successfully spawned job.",6,null],[3,"Publish","","A request to publish a topic.",null,null],[12,"name","","The name of the topic to be created.",7,null],[12,"addr","","A `strymon_communication` endpoint address on which subscribers can access the publication.",7,null],[12,"schema","","The kind of topic being published.",7,null],[12,"token","","A token authenticating the the submitter as a successfully spawned job.",7,null],[3,"Unpublish","","A request to unpublish a published topic.",null,null],[12,"topic","","The identifier of the topic to unpublish.",8,null],[12,"token","","A token authenticating the the submitter as a successfully spawned job.",8,null],[3,"Lookup","","Looks up a topic at the coordinator without registering a subscription for it.",null,null],[12,"name","","The name of the topic to look up.",9,null],[4,"CoordinatorRPC","","The list of supported RPC methods at the coordinator.",null,null],[13,"Submission","","Requests a new job submission.",10,null],[13,"Termination","","Requests the termination of a running job.",10,null],[13,"AddExecutor","","Registers a new executor at the coordinator.",10,null],[13,"AddWorkerGroup","","Registers a spawned job worker group.",10,null],[13,"Subscribe","","Subscribes to an topic in the catalog.",10,null],[13,"Unsubscribe","","Unsubscribes from a topic.",10,null],[13,"Publish","","Publishes a new topic in the catalog.",10,null],[13,"Unpublish","","Unpublishes a new topic.",10,null],[13,"Lookup","","Performs a topic lookup without subscribing to it.",10,null],[4,"Placement","","Defines the placement of job workers on the available executors.",null,null],[13,"Random","","Randomly picks (Number of Executors, Number of Worker Threads) workers. The number of threads is per executor.",11,null],[13,"Fixed","","Spawns the specified number of worker threads on each of the selected executors.",11,null],[4,"SubmissionError","","The error type for failed job submissions.",null,null],[13,"ExecutorsNotFound","","The specified executor list or the request number of executors is not available.",12,null],[13,"ExecutorUnreachable","","The coordinator was unable to reach a required executor.",12,null],[13,"SpawnError","","An executor reported an error while spawning.",12,null],[13,"TimedOut","","The coordinator timed out waiting for worker groups to arrive",12,null],[13,"Other","","An unknown error occured.",12,null],[4,"TerminationError","","The error type for failed job termination requests.",null,null],[13,"NotFound","","The specified job was not found",13,null],[13,"ExecutorUnreachable","","The coordinator was unable to reach a required executors.",13,null],[13,"TerminateError","","An executor reported an error while terminating the job.",13,null],[4,"WorkerGroupError","","The error cause sent back to worker groups when job spawning fails.",null,null],[13,"InvalidWorkerGroup","","The provided worker group meta-data was invalid.",14,null],[13,"SpawningAborted","","The spawning of the job has been aborted.",14,null],[13,"PeerFailed","","A peer worker group caused this job submission to fail.",14,null],[4,"SubscribeError","","The error message sent back to unsuccessful subscription requests.",null,null],[13,"TopicNotFound","","The requested topic does not exist.",15,null],[13,"AuthenticationFailure","","The provided authentication token was invalid.",15,null],[4,"UnsubscribeError","","The error message sent back for failed unsubscription request.",null,null],[13,"InvalidTopicId","","No subscription found for the requested topic.",16,null],[13,"AuthenticationFailure","","The provided authentication token was invalid.",16,null],[4,"PublishError","","The error message sent back for failed publication request.",null,null],[13,"TopicAlreadyExists","","A topic with the same name already exists.",17,null],[13,"AuthenticationFailure","","The provided authentication token was invalid.",17,null],[4,"UnpublishError","","The error message sent back for failed unpublication request.",null,null],[13,"InvalidTopicId","","No publication found for the requested topic.",18,null],[13,"AuthenticationFailure","","The provided authentication token was invalid.",18,null],[0,"catalog","","This module contains the queries which can be submitted to the catalog service to inspect the current state of the system.",null,null],[3,"AllTopics","strymon_rpc::coordinator::catalog","The request type use to query a list of all topics.",null,null],[3,"AllExecutors","","The request type use to query a list of all executors.",null,null],[3,"AllJobs","","The request type use to query a list of all jobs.",null,null],[3,"AllPublications","","The request type use to query a list of all publications.",null,null],[3,"AllSubscriptions","","The request type use to query a list of all subscriptions.",null,null],[4,"CatalogRPC","","The list of available methods to query the catalog.",null,null],[13,"AllTopics","","Return a list of all created topics.",19,null],[13,"AllExecutors","","Return a list of all available executors.",19,null],[13,"AllJobs","","Return a list of all running jobs.",19,null],[13,"AllPublications","","Return a list of all publications.",19,null],[13,"AllSubscriptions","","Return a list of all subscriptions.",19,null],[11,"from_u64","","",19,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_i64","","",19,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"to_u64","","",19,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[11,"to_i64","","",19,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"option"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"catalogrpc"}],"output":{"name":"bool"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"catalogrpc"}}],[11,"fmt","","",19,{"inputs":[{"name":"formatter"}],"output":{"name":"result"}}],[11,"discriminant","","",19,null],[11,"from_discriminant","","",19,null],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"alltopics"}}],[11,"new","","Creates a new instance of this request type.",20,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"allexecutors"}}],[11,"new","","Creates a new instance of this request type.",21,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"alljobs"}}],[11,"new","","Creates a new instance of this request type.",22,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"allpublications"}}],[11,"new","","Creates a new instance of this request type.",23,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"allsubscriptions"}}],[11,"new","","Creates a new instance of this request type.",24,{"inputs":[],"output":{"name":"self"}}],[11,"from_u64","strymon_rpc::coordinator","",10,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_i64","","",10,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"to_u64","","",10,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[11,"to_i64","","",10,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"option"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"coordinatorrpc"}],"output":{"name":"bool"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"coordinatorrpc"}}],[11,"discriminant","","",10,null],[11,"from_discriminant","","",10,null],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"placement"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"submission"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"submissionerror"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",12,{"inputs":[{"name":"error"}],"output":{"name":"submissionerror"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"termination"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"terminationerror"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"addexecutor"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"executorerror"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"jobtoken"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"jobtoken"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"jobtoken"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"self"},{"name":"jobtoken"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",3,{"inputs":[{"name":"self"},{"name":"jobtoken"}],"output":{"name":"bool"}}],[11,"le","","",3,{"inputs":[{"name":"self"},{"name":"jobtoken"}],"output":{"name":"bool"}}],[11,"gt","","",3,{"inputs":[{"name":"self"},{"name":"jobtoken"}],"output":{"name":"bool"}}],[11,"ge","","",3,{"inputs":[{"name":"self"},{"name":"jobtoken"}],"output":{"name":"bool"}}],[11,"cmp","","",3,{"inputs":[{"name":"self"},{"name":"jobtoken"}],"output":{"name":"ordering"}}],[11,"hash","","",3,null],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"addworkergroup"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"workergrouperror"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"subscribe"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"subscribeerror"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"unsubscribe"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"unsubscribeerror"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"publish"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"publisherror"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"unpublish"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"unpublisherror"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"lookup"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"executor","strymon_rpc","The interface exposed by executors. This interface is currently only intended to be used by the coordinator to send requests to a registered executor.",null,null],[3,"SpawnJob","strymon_rpc::executor","A request to spawn a new worker group.",null,null],[12,"job","","The meta-data of the job worker group to spawn.",26,null],[12,"hostlist","","The hostlist to be passed to `timely_communication`.",26,null],[3,"TerminateJob","","A request to terminate a running job.",null,null],[12,"job","","The job to terminate.",27,null],[4,"ExecutorRPC","","The list of available requests an executor can serve.",null,null],[13,"SpawnJob","","Request to spawn a new job worker group.",28,null],[13,"TerminateJob","","Request to terminate a running job.",28,null],[4,"SpawnError","","The error message returned by the executor for failed spawn requests.",null,null],[13,"InvalidRequest","","The request was invalid.",29,null],[13,"FileNotFound","","The executor was unable to locate the downloaded file.",29,null],[13,"WorkdirCreationFailed","","The working directory for the job could not be created.",29,null],[13,"FetchFailed","","The executable was unable to fetch the executable file.",29,null],[13,"ExecFailed","","Launching the executable failed.",29,null],[4,"TerminateError","","The error message returned by the executor if job termination fails.",null,null],[13,"NotFound","","The specified job is not running on this executor.",30,null],[13,"OperationNotSupported","","This implementation of the executor does not support job termination.",30,null],[11,"from_u64","","",28,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_i64","","",28,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"to_u64","","",28,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[11,"to_i64","","",28,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"option"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"executorrpc"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"executorrpc"}}],[11,"discriminant","","",28,null],[11,"from_discriminant","","",28,null],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"spawnjob"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"spawnerror"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"terminatejob"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"terminateerror"}}]],"paths":[[3,"Submission"],[3,"Termination"],[3,"AddExecutor"],[3,"JobToken"],[3,"AddWorkerGroup"],[3,"Subscribe"],[3,"Unsubscribe"],[3,"Publish"],[3,"Unpublish"],[3,"Lookup"],[4,"CoordinatorRPC"],[4,"Placement"],[4,"SubmissionError"],[4,"TerminationError"],[4,"WorkerGroupError"],[4,"SubscribeError"],[4,"UnsubscribeError"],[4,"PublishError"],[4,"UnpublishError"],[4,"CatalogRPC"],[3,"AllTopics"],[3,"AllExecutors"],[3,"AllJobs"],[3,"AllPublications"],[3,"AllSubscriptions"],[3,"ExecutorError"],[3,"SpawnJob"],[3,"TerminateJob"],[4,"ExecutorRPC"],[4,"SpawnError"],[4,"TerminateError"]]};
initSearch(searchIndex);
